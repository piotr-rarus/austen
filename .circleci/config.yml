version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.3
    working_directory: ~/austen
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Restoring environment
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install flake8
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "env"
      - run:
          name: Linter
          command: |
            . env/bin/activate
            python -m flake8 ./austen/
      - run:
          name: Tests
          command: |
            . env/bin/activate
            python -m pytest ./tests/    
      - run:
          name: Coverage
          command: |
            . env/bin/activate
            python -m pytest --cov=austen ./tests/
  deploy:
    docker:
      - image: circleci/python:3.7.3
    working_directory: ~/austen
    steps:
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Restoring environment
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install twine
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "env"
      - run:
          name: init .pyirc
          command: |
            echo -e "[pypi]" >> ~/.pyirc
            echo -e "username = rarus" >> ~/.pyirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pyirc
      - run:
          name: Create packages
          command: |
            rm -rf dist/*
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: Upload to pypi
          command: |
            . env/bin/activate
            twine upload dist/*
workflows:
  version: 2
  dev:
    jobs:
      - build
  prod:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/

